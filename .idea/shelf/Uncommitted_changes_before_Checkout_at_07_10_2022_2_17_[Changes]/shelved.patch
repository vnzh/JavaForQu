Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"9152e5f4-7204-4801-8f0d-54b46e20c0b3\" name=\"Changes\" comment=\"les1 branch\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GithubPullRequestsUISettings\">\r\n    <option name=\"recentNewPullRequestHead\">\r\n      <RepoCoordinatesHolder>\r\n        <option name=\"owner\" value=\"vnzh\" />\r\n        <option name=\"repository\" value=\"JavaForQu\" />\r\n      </RepoCoordinatesHolder>\r\n    </option>\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2FZkRNun58cz6zotPY87Y1LVh4g\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"autoscrollFromSource\" value=\"true\" />\r\n    <option name=\"autoscrollToSource\" value=\"true\" />\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"last_opened_file_path\": \"D:/Programming/Testing/GeekBrains/Program/Testing/Java Core для тестировщиков/JavaForQu/JavaForQu/src/main/java/HWLesson1\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\Programming\\Testing\\GeekBrains\\Program\\Testing\\Java Core для тестировщиков\\JavaForQu\\JavaForQu\\src\\main\\java\\HWLesson1\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"HWLesson2.Main\" />\r\n      <module name=\"JavaForQu\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"HWLesson2.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Main\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"9152e5f4-7204-4801-8f0d-54b46e20c0b3\" name=\"Changes\" comment=\"\" />\r\n      <created>1664706985938</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1664706985938</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"start\">\r\n      <created>1664707149031</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1664707149031</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"les1 branch\">\r\n      <created>1664707292349</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1664707292349</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"3\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"les2\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"start\" />\r\n    <MESSAGE value=\"les1 branch\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"les1 branch\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 893a9d40d03fe06ade7a74790986787b6eca0c11)
+++ b/.idea/workspace.xml	(date 1665098205427)
@@ -4,33 +4,18 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="9152e5f4-7204-4801-8f0d-54b46e20c0b3" name="Changes" comment="les1 branch">
-      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-    </list>
+    <list default="true" id="9152e5f4-7204-4801-8f0d-54b46e20c0b3" name="Changes" comment="" />
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
     <option name="LAST_RESOLUTION" value="IGNORE" />
+  </component>
+  <component name="Git.Merge.Settings">
+    <option name="BRANCH" value="les1" />
   </component>
   <component name="Git.Settings">
-    <option name="RECENT_BRANCH_BY_REPOSITORY">
-      <map>
-        <entry key="$PROJECT_DIR$" value="master" />
-      </map>
-    </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
   </component>
-  <component name="GithubPullRequestsUISettings">
-    <option name="recentNewPullRequestHead">
-      <RepoCoordinatesHolder>
-        <option name="owner" value="vnzh" />
-        <option name="repository" value="JavaForQu" />
-      </RepoCoordinatesHolder>
-    </option>
-  </component>
-  <component name="MarkdownSettingsMigration">
-    <option name="stateVersion" value="1" />
-  </component>
   <component name="ProjectId" id="2FZkRNun58cz6zotPY87Y1LVh4g" />
   <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
   <component name="ProjectViewState">
@@ -39,38 +24,12 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "RunOnceActivity.OpenProjectViewOnStart": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "last_opened_file_path": "D:/Programming/Testing/GeekBrains/Program/Testing/Java Core для тестировщиков/JavaForQu/JavaForQu/src/main/java/HWLesson1"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;
   }
-}]]></component>
-  <component name="RecentsManager">
-    <key name="CopyFile.RECENT_KEYS">
-      <recent name="D:\Programming\Testing\GeekBrains\Program\Testing\Java Core для тестировщиков\JavaForQu\JavaForQu\src\main\java\HWLesson1" />
-    </key>
-  </component>
-  <component name="RunManager">
-    <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
-      <option name="MAIN_CLASS_NAME" value="HWLesson2.Main" />
-      <module name="JavaForQu" />
-      <extension name="coverage">
-        <pattern>
-          <option name="PATTERN" value="HWLesson2.*" />
-          <option name="ENABLED" value="true" />
-        </pattern>
-      </extension>
-      <method v="2">
-        <option name="Make" enabled="true" />
-      </method>
-    </configuration>
-    <recent_temporary>
-      <list>
-        <item itemvalue="Application.Main" />
-      </list>
-    </recent_temporary>
-  </component>
+}</component>
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
     <task active="true" id="Default" summary="Default task">
@@ -80,21 +39,6 @@
       <option name="presentableId" value="Default" />
       <updated>1664706985938</updated>
     </task>
-    <task id="LOCAL-00001" summary="start">
-      <created>1664707149031</created>
-      <option name="number" value="00001" />
-      <option name="presentableId" value="LOCAL-00001" />
-      <option name="project" value="LOCAL" />
-      <updated>1664707149031</updated>
-    </task>
-    <task id="LOCAL-00002" summary="les1 branch">
-      <created>1664707292349</created>
-      <option name="number" value="00002" />
-      <option name="presentableId" value="LOCAL-00002" />
-      <option name="project" value="LOCAL" />
-      <updated>1664707292349</updated>
-    </task>
-    <option name="localTasksCounter" value="3" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -120,9 +64,4 @@
       </map>
     </option>
   </component>
-  <component name="VcsManagerConfiguration">
-    <MESSAGE value="start" />
-    <MESSAGE value="les1 branch" />
-    <option name="LAST_COMMIT_MESSAGE" value="les1 branch" />
-  </component>
 </project>
\ No newline at end of file
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n\r\n    <groupId>org.example</groupId>\r\n    <artifactId>JavaForQu</artifactId>\r\n    <version>1.0-SNAPSHOT</version>\r\n\r\n    <properties>\r\n        <maven.compiler.source>17</maven.compiler.source>\r\n        <maven.compiler.target>17</maven.compiler.target>\r\n    </properties>\r\n\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pom.xml b/pom.xml
--- a/pom.xml	(revision 893a9d40d03fe06ade7a74790986787b6eca0c11)
+++ b/pom.xml	(date 1665098205442)
@@ -9,8 +9,8 @@
     <version>1.0-SNAPSHOT</version>
 
     <properties>
-        <maven.compiler.source>17</maven.compiler.source>
-        <maven.compiler.target>17</maven.compiler.target>
+        <maven.compiler.source>12</maven.compiler.source>
+        <maven.compiler.target>12</maven.compiler.target>
     </properties>
 
 </project>
\ No newline at end of file
Index: src/main/java/HWLesson3/main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1251
===================================================================
diff --git a/src/main/java/HWLesson3/main.java b/src/main/java/HWLesson3/main.java
new file mode 100644
--- /dev/null	(date 1665098205482)
+++ b/src/main/java/HWLesson3/main.java	(date 1665098205482)
@@ -0,0 +1,71 @@
+package HWLesson3;
+
+public class main {
+
+    public static void main(String[] args) {
+
+
+        String[] strings = {"1", "2", "3", "4"};
+        Fruit[] fruits = {new Apple(), new Apple(),
+                new Orange(), new Orange()};
+//        Integer[] integers = {1, 2, 3, 4};
+        Integer[] integers = null;
+
+        ExchangePosition position = new ExchangePosition();
+        position.exPos(strings, 0, 3);
+        position.print(strings);
+        position.exPos(fruits, 0, 3);
+        position.print(fruits);
+        position.exPos(integers, 0, 3);
+        position.print(integers);
+
+        Box<Apple> appleBox = new Box<>(new Apple(), 15);
+        System.out.println(appleBox.getWeight());
+        Box<Orange> orangeBox = new Box<>(new Orange(), 10);
+        System.out.println(orangeBox.getWeight());
+        System.out.println(appleBox.compare(orangeBox));
+
+//        try {
+//            appleBox.pourOut(orangeBox);
+//        } catch (UncorrectFruictBox e) {
+//            e.printStackTrace();
+//        }
+
+
+        Box<?> fruitBox = new Box<>(new Orange(), 20);
+        System.out.println(orangeBox);
+        System.out.println(fruitBox);
+        try {
+            orangeBox.pourOut(fruitBox);
+        } catch (UncorrectFruictBox e) {
+            e.printStackTrace();
+        }
+
+        System.out.println(orangeBox);
+        System.out.println(fruitBox);
+        try {
+            orangeBox.add(new Orange());
+        } catch (UncorrectFruictBox e) {
+            throw new RuntimeException(e);
+        }
+        System.out.println(orangeBox);
+
+        BoxVarTwo<Apple> boxApple = new BoxVarTwo<>();
+        BoxVarTwo<Apple> boxAppleTwo = new BoxVarTwo<>();
+        System.out.println(boxAppleTwo);
+        boxAppleTwo.addFruit(new Apple());
+        System.out.println(boxAppleTwo);
+        boxAppleTwo.addFruit(new Apple());
+        System.out.println(boxAppleTwo);
+        try {
+            boxApple.pourOut(boxAppleTwo);
+        } catch (UncorrectFruictBox e) {
+            throw new RuntimeException(e);
+        }
+        System.out.println(boxApple);
+
+
+    }
+
+
+}
Index: src/main/java/HWLesson3/BoxVarTwo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1251
===================================================================
diff --git a/src/main/java/HWLesson3/BoxVarTwo.java b/src/main/java/HWLesson3/BoxVarTwo.java
new file mode 100644
--- /dev/null	(date 1665098205453)
+++ b/src/main/java/HWLesson3/BoxVarTwo.java	(date 1665098205453)
@@ -0,0 +1,64 @@
+package HWLesson3;
+
+import java.util.ArrayList;
+import java.util.Collection;
+
+public class BoxVarTwo<T extends Fruit> {
+
+
+    private ArrayList<T> fructsList;
+
+    public ArrayList<T> getFructsList() {
+        return fructsList;
+    }
+
+    public void setFructsList(ArrayList<T> fructsList) {
+        this.fructsList = fructsList;
+    }
+
+    public BoxVarTwo() {
+        this.fructsList = new ArrayList<>();
+    }
+
+    public float getBoxWeight() {
+        float weight = 0;
+        if (fructsList == null) return weight;
+        for (Fruit t : fructsList) {
+            weight += t.getWeight();
+        }
+        return weight;
+    }
+
+    public boolean compare(BoxVarTwo<?> box) {
+        if (this.getBoxWeight() - box.getBoxWeight() < 0.001) return true;
+        return false;
+    }
+
+    //B  this - the  box  from///
+    public void pourOut(BoxVarTwo<? super T> box) throws UncorrectFruictBox {
+        if (!box.fructsList.isEmpty() &&
+                !this.fructsList.isEmpty() &&
+                !(box.fructsList.get(0).getClass().getName().
+                        equals(this.fructsList.get(0).getClass().getName()))) {
+            throw new UncorrectFruictBox("Sorts are different");
+        }
+        box.fructsList.addAll(this.fructsList);
+
+        this.fructsList.clear();
+
+    }
+
+    public void addFruit(T t) {
+        fructsList.add(t);
+    }
+
+    @Override
+    public String toString() {
+        return "BoxVarTwo{" +
+                "fructsList=" + fructsList +
+                '}';
+    }
+
+
+}
+
Index: src/main/java/HWLesson3/Apple.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1251
===================================================================
diff --git a/src/main/java/HWLesson3/Apple.java b/src/main/java/HWLesson3/Apple.java
new file mode 100644
--- /dev/null	(date 1665098205458)
+++ b/src/main/java/HWLesson3/Apple.java	(date 1665098205458)
@@ -0,0 +1,24 @@
+package HWLesson3;
+
+public class Apple extends Fruit {
+
+    private final float weight = 1.0f;
+
+    public Apple() {
+
+    }
+
+
+    @Override
+    public String toString() {
+        return String.format("Apple, weight %2.2f", getWeight());
+    }
+
+    @Override
+    public float getWeight() {
+        return weight;
+    }
+
+
+}
+
Index: src/main/java/HWLesson3/Orange.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1251
===================================================================
diff --git a/src/main/java/HWLesson3/Orange.java b/src/main/java/HWLesson3/Orange.java
new file mode 100644
--- /dev/null	(date 1665098205448)
+++ b/src/main/java/HWLesson3/Orange.java	(date 1665098205448)
@@ -0,0 +1,22 @@
+package HWLesson3;
+
+public class Orange extends Fruit{
+
+    private final float weight = 1.5f;
+    public Orange() {
+
+
+    }
+
+    @Override
+    public String toString() {
+        return String.format("Orange, weight %2.2f", getWeight());
+    }
+
+    @Override
+    public float getWeight() {
+        return weight;
+    }
+
+
+}
Index: src/main/java/HWLesson3/UncorrectFruictBox.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1251
===================================================================
diff --git a/src/main/java/HWLesson3/UncorrectFruictBox.java b/src/main/java/HWLesson3/UncorrectFruictBox.java
new file mode 100644
--- /dev/null	(date 1665098205471)
+++ b/src/main/java/HWLesson3/UncorrectFruictBox.java	(date 1665098205471)
@@ -0,0 +1,7 @@
+package HWLesson3;
+
+public class UncorrectFruictBox extends Exception{
+
+    public UncorrectFruictBox(String sorts_are_different) {
+    }
+}
Index: src/main/java/HWLesson3/Box.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1251
===================================================================
diff --git a/src/main/java/HWLesson3/Box.java b/src/main/java/HWLesson3/Box.java
new file mode 100644
--- /dev/null	(date 1665098205477)
+++ b/src/main/java/HWLesson3/Box.java	(date 1665098205477)
@@ -0,0 +1,73 @@
+package HWLesson3;
+
+public class Box<T extends Fruit> {
+
+    private T fruit;
+
+    public T getFruit() {
+        return fruit;
+    }
+
+    public void setFruit(T fruit) {
+        this.fruit = fruit;
+    }
+
+    private int amount;
+
+    public int getAmount() {
+        return amount;
+    }
+
+    public void setAmount(int amount) {
+        this.amount = amount;
+    }
+
+    public Box(T fruit, int amount) {
+        this.fruit = fruit;
+        this.amount = amount;
+    }
+
+
+    public void add(T t) throws UncorrectFruictBox {
+        if (!(t.getClass().getName().equals(this.fruit.getClass().getName()))) {
+            throw new UncorrectFruictBox("Sorts are different");
+        }
+        if (this.fruit == null) {
+            this.fruit = t;
+            this.amount += 1;
+        } else {
+            this.amount += 1;
+        }
+    }
+
+    public float getWeight() {
+        float weight = this.fruit.getWeight() * this.amount;
+
+        return weight;
+    }
+
+    public boolean compare(Box<?> box) {
+        if (this.getWeight() - box.getWeight() < 0.001) return true;
+        return false;
+    }
+
+    //Box<?> box -   the   box from  pourOut
+    public void pourOut(Box<?> box) throws UncorrectFruictBox {
+        if (box.fruit.getClass().getName() != null &&
+                this.fruit.getClass().getName()  != null &&
+               !(box.fruit.getClass().getName().equals(this.fruit.getClass().getName()))) {
+            throw new UncorrectFruictBox("Sorts are different");
+        }
+        this.setAmount(this.getAmount() + box.getAmount());
+        box.setAmount(0);
+        box.fruit = null;
+    }
+
+    @Override
+    public String toString() {
+        return "Box{" +
+                "fruit=" + fruit +
+                ", amount=" + amount +
+                '}';
+    }
+}
Index: src/main/java/HWLesson3/Fruit.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1251
===================================================================
diff --git a/src/main/java/HWLesson3/Fruit.java b/src/main/java/HWLesson3/Fruit.java
new file mode 100644
--- /dev/null	(date 1665098205462)
+++ b/src/main/java/HWLesson3/Fruit.java	(date 1665098205462)
@@ -0,0 +1,19 @@
+package HWLesson3;
+
+public abstract class Fruit {
+
+     float weight;
+
+    public Fruit(float v) {
+    }
+    public Fruit() {
+    }
+    public float getWeight() {
+        return weight;
+    }
+
+    public void setWeight(float weight) {
+        this.weight = weight;
+    }
+}
+
Index: src/main/java/HWLesson3/ExchangePosition.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1251
===================================================================
diff --git a/src/main/java/HWLesson3/ExchangePosition.java b/src/main/java/HWLesson3/ExchangePosition.java
new file mode 100644
--- /dev/null	(date 1665098205467)
+++ b/src/main/java/HWLesson3/ExchangePosition.java	(date 1665098205467)
@@ -0,0 +1,29 @@
+package HWLesson3;
+
+
+
+public class ExchangePosition {
+
+
+    public void exPos(Object[] obj, int first, int second) {
+        if (obj == null) {
+            System.out.println("Massiv T[] is empty (null)");
+            return;
+        }
+        Object aux = obj[first];
+        obj[first] = obj[second];
+        obj[second] = aux;
+
+    }
+
+    public void print(Object[]  objects) {
+        if (objects == null) {
+            System.out.println("Massiv T[] is empty (null)");
+            return;
+        }
+        for (Object o : objects) {
+            System.out.println(o.toString());
+        }
+    }
+
+}
